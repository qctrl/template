# How to use this file
# - Copy this file to the root of your repository
# - Update the values as per the instructions in the comments
# - Remove all comments
#
# More information
# - https://packaging.python.org/en/latest/specifications/pyproject-toml/
# - https://code.q-ctrl.com/packaging#python
# - https://python-poetry.org/docs/pyproject/

[project]

# TODO: Update with the "Install" name as defined in https://code.q-ctrl.com/naming-conventions/#packages
name = "qctrl-template"

# TODO: Update with the "Package" name as defined in https://code.q-ctrl.com/naming-conventions/#packages
description = "Q-CTRL Template"

# TODO: Update with the supported Python versions
requires-python = ">=3.13, <3.14"

# TODO: Update with the "Version" as defined in https://code.q-ctrl.com/releases#version
# - Remove if the repository does not maintain a version
version = "0.1.0"

# TODO: Update with the license as defined in https://code.q-ctrl.com/licensing
# - Commercial = "https://q-ctrl.com/terms"
# - Open source = "Apache-2.0"
# - Unlicensed = ""
license = "Apache-2.0"

# DO NOT EDIT - the README.md file as defined in https://github.com/qctrl/template/blob/master/README.md
readme = "README.md"

# DO NOT EDIT
authors = [
  {name = "Q-CTRL", email = "support@q-ctrl.com>"}
]

# DO NOT EDIT
maintainers = [
  {name = "Q-CTRL", email = "support@q-ctrl.com>"}
]

# DO NOT EDIT
keywords = [
  "black opal",
  "boulder opal",
  "fire opal",
  "ironstone opal",
  "nisq",
  "open controls",
  "q control",
  "q ctrl",
  "q-control",
  "q-ctrl",
  "qcontrol",
  "qctrl",
  "quantum",
  "quantum algorithms",
  "quantum circuits",
  "quantum coding",
  "quantum coding software",
  "quantum computing",
  "quantum control",
  "quantum control software",
  "quantum control theory",
  "quantum engineering",
  "quantum error correction",
  "quantum firmware",
  "quantum fundamentals",
  "quantum navigation",
  "quantum sensing",
  "qubit",
  "qudit",
]

# TODO: Remove `classifiers` if the repository does not implement a publicly available package
dynamic = ["classifiers", "dependencies"]

# TODO: Replace `[repository]` in the `Source` with the repository name
# TODO: Update `Documentation` with a link to the "User documentation" as defined in https://code.q-ctrl.com/documentation#user-documentation
# - Remove otherwise.
[project.urls]
Source = "https://github.com/qctrl/[repository]"
Homepage = "https://q-ctrl.com"
Documentation = "https://docs.q-ctrl.com"
LinkedIn = "https://www.linkedin.com/company/q-ctrl/"
Facebook = "https://www.facebook.com/qctrl"
X = "https://x.com/qctrlHQ"
YouTube = "https://www.youtube.com/qctrl"
GitHub = "https://github.com/qctrl"

# DO NOT EDIT
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]

# TODO: Remove if the repository implements a package
package-mode = false

# TODO: Remove if the repository does not implement a publicly available package
# - Update supported Python versions otherwise.
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: System :: Distributed Computing"
]

# TODO: Update with the "Import" name as defined in https://code.q-ctrl.com/naming-conventions
# - Remove if the repository doesn't implement a package
packages = [
    { include = "qctrltemplate" },
]

# Uncomment the following 2 blocks if the package requires access to the internal PyPI.
# # Use the public PyPI as the main source: DO NOT EDIT
# [[tool.poetry.source]]
# name = "PyPI"
# priority = "primary"

# # Use the internal PyPI as the supplemental source: DO NOT EDIT
# [[tool.poetry.source]]
# name = 'Artifactory'
# url = 'https://qctrl.jfrog.io/artifactory/api/pypi/qctrl/simple/'
# priority = "supplemental"
